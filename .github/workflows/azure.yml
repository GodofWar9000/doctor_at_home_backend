# Uses Github Actions to Deploy on Azure 
# see https://github.com/Azure/webapps-container-deploy
#
# Prereqs: 
# - Create Service Principal for RBAC
#   $WEBAPP_NAME="doctor-at-home-backend"
#   $SUBSCRIPTION_ID="Your subscription ID"
#   $RESOURCE_GROUP="your resource group"
#   az ad sp create-for-rbac --name "${WEBAPP_NAME}" --role contributor --scopes /subscriptions/${SUBSCRIPTION_ID}/resourceGroups/${RESOURCE_GROUP} --sdk-auth
# - Add output from above (JSON) to a secret named AZURE_CREDENTIALS (Project > Settings > Secrets)
#   
# - Add the Azure Container Registry login information (see Azure portal of your registry instance).
#   Your Azure Container Registry must be there, e.g. 'doctorathome.azurecr.io'
#   Secret REGISTRY_USERNAME: Your username for the container registry
#   Secret REGISTRY_PASSWORD: the password

on: 
  push:
    branches:
    - master
 

name: backend
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    # checkout the repo
    - name: 'Checkout Github Action' 
      uses: actions/checkout@master

    # login to Azure 
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # login to Azure container registry
    - uses: azure/docker-login@v1
      with:
        login-server: doctorathome.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    
    # Setup Java
    - name: 'Set up JDK 1.8'
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    # Cache maven dependencies
    - name: 'Cache Maven packages'
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    # Build with maven
    - name: 'Build with Maven'
      run: |        
        cd doctor_at_home
        mvn -B package --file pom.xml

    # Build and push container image
    - name: 'Build and push container image'
      run: |
        cd doctor_at_home
        docker build . -t doctorathome.azurecr.io/backend:${{ github.sha }}
        docker push doctorathome.azurecr.io/backend:${{ github.sha }} 

    # Deploy to Azure App Service with Containers (app must exist already for this to work)
    - name: 'Deploy to Azure'
      uses: azure/webapps-container-deploy@v1
      with:
        app-name: 'doctor-at-home-backend'
        images: 'doctorathome.azurecr.io/backend:${{ github.sha }}'
    
    - name: Azure logout
      run: |
        az logout
